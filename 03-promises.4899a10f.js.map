{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,SAAQ,CAACC,EAASC,KACpBC,YAAW,KACLN,EAEFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAGpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE7B,GACDA,GACAU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBb,EAAAe,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAEhEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBb,EAAAe,OAAOG,QAAQ,sBAAoBN,QAAeC,MAAU,G,CAnBrDM,SAASC,cAAc,SAuB/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBACJ,MAAMV,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cACpC,IAAIC,EAAaC,OAAOf,EAAMgB,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAClCG,QAAQC,IAAIpB,GACZ,IAAK,IAAIqB,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrChC,EAAcgC,EAAGP,GACjBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    });\n  }, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n  let firstDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountdelay = Number(amount.value);\n  console.log(delay);\n  for (let i = 1; i <= amountdelay; i += 1) {\n    createPromise(i, firstDelay);\n    firstDelay += stepDelay;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","Notify","success","catch","failure","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","firstDelay","Number","value","stepDelay","amountdelay","console","log","i"],"version":3,"file":"03-promises.4899a10f.js.map"}